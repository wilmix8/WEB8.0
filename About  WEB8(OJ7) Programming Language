Welcome to the JAVA7.0 wiki!
============================

ABOUT  WEB8.0(OJ7) 

======================


 WEB8.0(OJ7)  is   invented by  wilmix jemin  j  at  year  2013 in  java  and modified  in  DOTWEB3.0 P.L in year  2016.
 

Note: The  Meaning  of   WEB8.0(OJ7)   is  OLIVE +  Jemin  Advanced Virtual Machine

OLIVE  gives   the  meaning   a symbol of friendship and reconciliation, cleansing and healing, light, 

victory and richness and, above all, a sign of peace.

 

The Major common syntax  for   WEB8.0(OJ7) is given below..

 

 

Major Syntax for  WEB8.0(OJ7) program SYNTAX-1:

============================================

 

filename.web

 

===========

 

<WEB>

 

<USE> packages;

 

<PACK> packagename

 

{

 

    <CLASS>  <classname>

 

   {

 

      public void main()

 

      {

 

        <! source  code !>

 

      }

 

   }

 

}

 

Advanced   WEB8.0(OJ7) Program SYNTAX-2:
=======================================

 

Filename.oakjava7
=================


public  class Oakjava7Prog

 

{

 

 //This  constructor with super method is mandatory,which indicates it is a  oakjava7 program
 
public Oakjava7Prog() 
{
super();

}
 
 //  it  means it will not  support any java compiler, it is entirely different.
 <br>
 
public void  main() 

 

{

 

<!  OAKJAVA7 Logic  !>

}

 

}

 

Major Syntax for  oakjava7 program :SYNTAX-3

===========================================

 

filename.java7

============

 

<JAVA>

 

<USE> packages;

 

<PACK> packagename

 

{

 

    <CLASS>  <classname>

 

   {

 

      public void main()

 

      {

 

        <! source  code !>

 

      }

 

   }

 

}

 


============================================================================== 

                        Program Structure

==============================================================================

 

 

 WEB8.0(OJ7)  SYNTAX-1  Program  Structure(.web)

=============================================

 

Beginning  Section  :  <WEB>

 

Documentation  Section

 

Package  Statement;

 

<USE> Statement;

 

<PACK> packagename

 

LOGIC  SECTION

 

    <CLASS>  <classname>

 

   {

 

      public void main()

 

      {

 

        <! source  code !>

 

      }

 

CLOSE  LOGIC  SECTION

 

ENDING  SECTION : }

 

Explanation:

 

 WEB8.0(OJ7)  Ending  section  is   }  ;  Ending  your   WEB8.0(OJ7)  program
Documentation  Section   means   you  can  include  description  
with  comments.

 

Package  statement  means   you   had  to  include   WEB8.0(OJ7) program  in  Package  ....
<USE>  statement  to  import  all  the  packages.
Interface   statement   for    supporting   multiple  inheritance.
Logic   section    for   writing    WEB8.0(OJ7)  logic  with   Class   followed  by main   method .
after  writing logic   close    the  logic   section. 



 WEB8.0(OJ7)  SYNTAX-2  Program  Structure(.oakjava7)(Advanced  WEB8.0(OJ7) program)

===========================================================================

 

 WEB8.0(OJ7)  Section

 WEB8.0(OJ7) constructor Section

LOGIC METHODS SECTION

 

   class  WEB8Prog

 

   {

 

    public void main()

 

      {

 

        <!  WEB8.0(OJ7) source  code !>

 

      }

 

CLOSE   WEB8.0(OJ7)  SECTION

 

ENDING  SECTION : }

 

Explanation:

=============

 

All   WEB8.0(OJ7)   should   start   with   class WEB8Prog
{ 

 and it should include  the  constructor of  WEB8.0(OJ7) program..

 public WEB8Prog()
	{
		super();

	}



But   public void  main() is   used  in  WEB8.0(OJ7) program

 

 public void main() is for protection  from hackers.

 

 WEB8.0(OJ7)  SYNTAX-3 Program Structure

=================================

 

filename.Web8

=============

 

Beginning  Section  :  <WEB8>

 

Documentation  Section

 

Package  Statement;

 

<USE> Statement;

 

<PACK> packagename

 

LOGIC  SECTION

 

    <CLASS>  <classname>

 

   {

 

      public void main()

 

      {

 

        <! source  code !>

 

      }

 

CLOSE  LOGIC  SECTION

 

ENDING  SECTION : }

 

 

 

Explanation:

===========

 

 WEB8.0(OJ7)  Ending  section  is   }  ;  Ending  your   WEB8.0(OJ7)  program

 

Documentation  Section   means   you  can  include  description  

 

with  comments.

 

Package  statement  means   you   had  to  include  WEB8.0(OJ7)  program  in  Package  ....

 

<USE>  statement  to  import  all  the  packages.

 

Interface   statement   for    supporting   multiple  inheritance.

 

Logic   section    for   writing    WEB8.0(OJ7)  logic  with   Class   followed  by main   method .

 

after  writing logic   close    the  logic   section. 

 

 

 
DEMERITS  of JAVA and  C#

==========================

 

a) JAVA  class  file   has  many demerits  so  any thing  you create  a compiler  in  java

the source  code  can  be  easily  taken  by JAD.

 

b)  C#  (.exe  or  .dll)  source code can  also  be  taken  using  code  reflector.

so   C#  also   fails  in  Code   security.

That's  why    WEB8.0(OJ7)  came to the picture.

 
 WEB8.0(OJ7) is also used  for creating  datastructures 

and    compilers. ie) It is  also used in Research side.

 

 

 WEB8.0(OJ7)  accepts  ".web"   filename  and  translate  to  .jclass file and .ojava7 

that  java  is  said  to   WEB8.0(OJ7)  different  from  orginal java and  WEB8.0(OJ7) Syntax

which  is   not understood  by hackers.

 

 

 WEB8.0(OJ7)  loads    .dll in   memory  to create  a  Prototype  software.

 

c) webc7  <filename.web> and  => will  also   create  .exe  prototype software


which  jdk1.8  or any  java compiler  cannot  do it.Because

 WEB8.0(OJ7) is  best in high security side.

 

 

 

  FAQS?

  =====

 

How  to compile   WEB8.0(OJ7) program?

===========================================

 

 

 web8c  <filename.web>

 and

 web8c <filname.web8> 

 <filename>.web8  is the view part of   WEB8.0(OJ7) mvc program.

 

How  to run    WEB8.0(OJ7) ?

 

web7 <filename>

 

How  to  compile  and  create  .exe   or .dll  file?

 

web8  <filename.web>

 

web8c <filename.web> to  generate  .jclass files, .ojava7 and  .exe files.

 
ADVANTAGES of  WEB8.0(OJ7)

a)  WEB8.0(OJ7) behaves like his parent CH$ and  Dotweb3.0

which java fails completly in code security. 

b)  WEB8.0(OJ7) supports Garbage collection and explicity memory.

c)  WEB8.0(OJ7) support Multiple inheritance ,friend function, and operator overloading

and all C/C++ oops concepts.

d)  WEB8.0(OJ7) also supports CDollar concepts.

e)  WEB8.0(OJ7) also includes C# oops concepts.

f)  WEB8.0(OJ7) also follows attractive syntax.

g)   WEB8.0(OJ7)   provides  High  Security when compared to all the  programming  languages.

h) Since it had  100% oops concepts it is ranked as Rank A' Programming language.
Due to the  reasons  given below...

 WEB8.0(OJ7)  is   focused  on   creating  Prototype  software(when we  used  with Jdollar(CSHELL),used  to  create Gaming and utilities,  used  in  web application  with  java frameworks , used  with  Machine Learning, Datascience ,Single Webpage application , Remote X Application, etc  with  oakjava7 frameworks,  and  it  has  Advanced Oops. It  also  supports obfuscation, Code Security, and it  is Learnable . 

Note : [ World Rank A'  means  Advanced  programming language  when  compare  to  all  the  Programming languages  and   10  times  greater  than   Web1.0 programming  language.]

Top quality software according to wilmixsolomonresearch lab.

i)  WEB8.0(OJ7) is used with JDollar,CWEB section, C#, and with all writ Programming languages.

j)   WEB8.0(OJ7)  also  provide   Shortest  function Statements  ...

k)   WEB8.0(OJ7) is  easy   to  learn  and  focus  . ie) it  is  Learnable  Programming Language...

l)   WEB8.0(OJ7)  also  had  his   own  shell  prompt  known  as  Web8Shell...

you  can  execute and  run   WEB8.0(OJ7) Programs...

m)   WEB8.0(OJ7)  also   focus  on Code  Security.

n)   WEB8.0(OJ7)  is  an interactive  Programming Language..

ie)  It  is  used   with  Java  ,  C#  And  other  writ  Programming Languages .. 

Java  and C#  professionals can  easily  focus. 

o)   WEB8.0(OJ7)  is  focused on MachineLearning,Datascience  ,etc.

p)   WEB8.0(OJ7)  is  used  with  WNOSQL  Database which  provides  high   security...

q)   WEB8.0(OJ7)  is used  with  WXML  which  is  very  easy   to  create   Forms ,Reports,etc.It avoids

typing  html  everytime.  

r)  WEB8.0(OJ7)  also   supports   100%  OOPS  concept. So  it  is called as  a  Pure OOPS  Programming Language.

s)  We  can   convert   Java program  to   WEB8.0(OJ7)  Program  by   using  command  ConvertToWeb8.

t)   WEB8.0(OJ7)   Intermediate Program    is  used   to  test  the   WEB8.0(OJ7)  Program  , when  user

done  mistake  in  WEB8.0(OJ7) Programming. 

u)  WEB8.0(OJ7)    is  designed   in such  a  way   that  Java/C++/.Net/Python  Programmers  can   easily   follow it.

v)   WEB8.0(OJ7)  is  best  in security  side. eg)   when  we use  Machine learning or web application, it  is best  in security side.

w)   WEB8.0(OJ7)  will  work  in  Linux  platform like  ubuntu, etc. So write once  and  run any where.

x)  ScrollServer  can  be used  with  Java Frameworks like  Hibernate,  Mybatics, Java Spring,EJB.
We can use this for constructing web application. but  WEB8.0(OJ7) cannot be used with
java Frameworks  like  Hibernate,  Mybatics, Java Spring,EJB. Because  WEB8.0(OJ7) and java/j2ee
are invented in different programming Languages.
eg)  WEB8.0(OJ7) is implemented by Wilmix Jemin j in DOTWEB P.L and CH$. But 
Java/J2ee  is  implemented by James Gosling in Oak P.L.
Dotweb P.L is used for compiler construction.

so  we   can  call   WEB8.0(OJ7)  as an  interactive  programming Language
when we used with scrollserver.

y)  WEB8.0(OJ7)  is  Good  for  the  Interviewer  to  select  a  rightful candidate.

Z)  To Write   WEB8.0(OJ7)  program for  any task it will take  only few  minutes  or

if  it is  a miniproject  we  can  finish  the  mini project  with in 1 hour.

Thus   WEB8.0(OJ7)  Programming Language is very  easy, it  saves  time and  cost. So it  is a user friendly  Programming Language.

AA)   WEB8.0(OJ7)  Programming Language also compile and  run  the  file  like .web

   at the same time  using   javap7.exe. 
 

 

 

 

Note: Here only   WEB8.0(OJ7) Programming language is  focused.

 

ABOUT  WEB8.0(OJ7) Modules
======================

a)IMF  Framework   is   another module  of   WEB8.0(OJ7).


b) OAKJAVA8(JAVA8.0) Programming Language

 

 WEB8.0(OJ7)  Tutorial website  is: For OakJava7,Datascience,Machinelearning, WEB8.0(OJ7) samples see the given below url 

 https://sites.google.com/site/oakjava7programminglanguage

 

OAKJAVA8(JAVA8.0) Tutorial website is: For Oakjava8 - Mobile type applications see the given below url...

 
https://sites.google.com/site/oakjava8programminglanguage


  WEB8.0(OJ7) Introduction with machine learning syntax with user friendly
======================================================================
framework  OJ7UA ( WEB8.0(OJ7) userfriendly Application)
=====================================================
Syntax for  WEB8.0(OJ7) Machine Learning program
============================================


<filename>.oj7ua
====================

 <OJ7ML> // Beginning of OakJava7 ML Program


<DESIGN  

// Design is the HTML GUI or variable declarations or method declarations


// SRC include methods declarations

SRC='


// Method declarations


public static void Methods1()

{

j7out.println("");

}


'> 


//Close Design for GUI


</DESIGN>	


//Mention name of Package value in Package always mention wnosql as a default value for the Database. 


// Mention OakJava7 library files for machine Learning  in J7Lib eg) Java7ML 


// Mention Package as ML , Names as sampleml1 for namespace name and class name as misctype1


// Mention Type as .exe or .dll 


<OakJava7 Package='ML' Database='wnosql' J7Lib='{Java7ML}' Names='sampleml1,misctype1' Type='exe'  


//Mention MAIN section for  WEB8.0(OJ7) main program ie) public void main() can be  written as MAIN


// Mention what are the Business logic methods inside the main program eg) Methods1(),Methods2() in the MAIN section


 MAIN=' 



// Methods call


Methods1();

Methods2();

// This ( ?> ) is  equivalent to }}.Close the Main Section

?>

'

//LOGIC sections represent Business Logic for OakJava7

LOGIC=' 


  

//Business logic methods

public static void Method2()


{


<!----- write Business Logic and  use OakJava7 Servlet ----!>


}






// Close the Logic section

'>


// Close  the  WEB8.0(OJ7) program 

</OakJava7>


// End of   WEB8.0(OJ7) Program

</OJ7ML>




Explanation 
============

Here when you code the Machine Learning program  using this syntax and compile it using javac7 <filename.oj7ua> , 

it will automatically convert to   WEB8.0(OJ7) program ie(.web) . And you will get a optimized  WEB8.0(OJ7) (.web) code and .exe   and .ojava7 files.

You can also test the   WEB8.0(OJ7) Machine Learning program using generated (.web) code...So when we notice that here <OJ7ML>  act like a  WEB8.0(OJ7) user friendly framework. It act like a XML syntax with data present inside it.

This   WEB8.0(OJ7)  Machine Learning program (<OJ7ML) will automatically generate (.web). This (<OJ7ML>) 

program has attractive syntax.So it is considered as a  WEB8.0(OJ7) advanced framework or 

 WEB8.0(OJ7) Machine learning framework. It reduces the pain of writing program for (.web).

And It saves time and  cost.The Full form of <OJ7ML> syntax is " WEB8-MACHINELEARNING". 

It is used for Dynamic Webpages construction ie) DB with GUI + Business Logic and  WEB8.0(OJ7) Servlet.

We can also generate .dll  using this syntax by using .dll value as a Type.

So when you include .exe value as a Type means when you compile the  WEB8.0(OJ7)

it will generate the  .exe files and  .ojava7 files.

 Note: Kindly refer   WEB8.0(OJ7)  Google site...

[Project  Period : 2005  to  2016,2013,2021,2022,2023,2024,2025]


Note: This  document  is under construction
